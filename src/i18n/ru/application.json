{
  "type.period": {
    "message": "Период",
    "description": "Срок оказания услуги."
  },
  "type.usage": {
    "message": "Лимит",
    "description": "Лимит на использование услуги."
  },
  "field.expiredAt": {
    "message": "Время истечения",
    "description": "Время истечения заявки."
  },
  "button.goDocument": {
    "message": "Документация",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу документации."
  },
  "button.goCredentials": {
    "message": "Учетные данные",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу учетных данных."
  },
  "button.buyMore": {
    "message": "Купить больше",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу покупки больше."
  },
  "button.createOrder": {
    "message": "Создать заказ",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу создания заказа."
  },
  "button.custom": {
    "message": "Настроить",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу настройки."
  },
  "button.query": {
    "message": "Запрос",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу запросов."
  },
  "button.usage": {
    "message": "История использования",
    "description": "Кнопка, при нажатии на которую пользователь переходит на страницу истории использования."
  },
  "field.application": {
    "message": "Заявка",
    "description": "Заявка на получение услуги."
  },
  "field.status": {
    "message": "Статус",
    "description": "Статус заявки."
  },
  "field.id": {
    "message": "ID заявки",
    "description": "Идентификатор заявки."
  },
  "field.remainingAmount": {
    "message": "Остаток",
    "description": "Количество оставшихся ресурсов по заявке."
  },
  "field.usedAmount": {
    "message": "Использовано",
    "description": "Количество использованных ресурсов по заявке."
  },
  "field.apiKey": {
    "message": "API-ключ",
    "description": "Ключ для доступа к API."
  },
  "field.service": {
    "message": "Услуга",
    "description": "Услуга, на которую подана заявка."
  },
  "field.operation": {
    "message": "Операция",
    "description": "Операция, выполняемая по заявке."
  },
  "field.amount": {
    "message": "Количество",
    "description": "Количество ресурсов, запрашиваемых в заявке."
  },
  "field.traceId": {
    "message": "Код отслеживания",
    "description": "Код отслеживания одного вызова API по заявке, оставьте как 'Код отслеживания'."
  },
  "field.shouldPayPrice": {
    "message": "Итоговая цена",
    "description": "Итоговая цена по заявке."
  },
  "field.api": {
    "message": "API",
    "description": "Это онлайн-сервис, предоставляемый пользователю через API."
  },
  "field.proxy": {
    "message": "Прокси",
    "description": "Это онлайн-сервис, предоставляемый пользователю через HTTP-прокси (для передачи данных)."
  },
  "field.credential": {
    "message": "Учётные данные",
    "description": "Учётные данные, указанные в заявке."
  },
  "field.name": {
    "message": "Имя",
    "description": "Имя, указанное в заявке."
  },
  "field.package": {
    "message": "Пакет",
    "description": "Пакет, представляющий различные ценовые предложения, например 100 долларов за 10 000 баллов, 200 долларов за 20 000 баллов."
  },
  "field.type": {
    "message": "Тип",
    "description": "Тип заявки."
  },
  "field.freeAmount": {
    "message": "Бесплатное количество",
    "description": "Количество бесплатных услуг по заявке."
  },
  "field.extraPrice": {
    "message": "Дополнительная цена",
    "description": "Дополнительная цена, которую пользователь должен оплатить по заявке."
  },
  "message.alreadyApplied": {
    "message": "Вы уже подали заявку на эту услугу, пожалуйста, проверьте консоль",
    "description": "Сообщение, отображаемое пользователю, если заявка на услуги уже подана."
  },
  "message.applySuccessfully": {
    "message": "Заявка успешно подана",
    "description": "Сообщение, отображаемое пользователю, если заявка успешно подана."
  },
  "message.notApplied": {
    "message": "Вы еще не подали заявку на эту услугу, пожалуйста, подайте заявку перед использованием",
    "description": "Сообщение, отображаемое пользователю, если заявка на услугу не подана."
  },
  "message.yourApplication": {
    "message": "Ваша заявка",
    "description": "Сообщение, отображаемое пользователю, когда показывается его заявка."
  },
  "message.unverified": {
    "message": "Вам необходимо пройти проверку личности, чтобы подать заявку на эту услугу",
    "description": "Сообщение, отображаемое пользователю, пока он не прошел процедуру проверки личности."
  },
  "message.goVerify": {
    "message": "Перейти к проверке личности",
    "description": "Сообщение, отображаемое пользователю, пока он не прошел процедуру проверки личности."
  },
  "message.requiredParameter": {
    "message": "Обязательный параметр",
    "description": "Сообщение, отображаемое пользователю, если обязательные параметры не были введены."
  },
  "message.example": {
    "message": "Пример",
    "description": "Сообщение, отображаемое пользователю, если обязательные параметры не были введены."
  },
  "message.createCredentialSuccessfully": {
    "message": "Учетные данные успешно созданы",
    "description": "Сообщение, отображаемое пользователю, если учетные данные были успешно созданы."
  },
  "message.readPolicy": {
    "message": "Я прочитал и согласен",
    "description": "Сообщение, отображаемое пользователю, если пользователь прочитал и согласен с политикой."
  },
  "message.policy": {
    "message": "Соглашение об использовании технических услуг",
    "description": "Сообщение, отображаемое пользователю, если пользователь прочитал и согласен с политикой."
  },
  "message.notAgreePolicy": {
    "message": "Вы не согласились с соглашением об использовании технических услуг",
    "description": "Сообщение, отображаемое пользователю, если он не согласен с политикой."
  },
  "message.confirmApplying": {
    "message": "Подтвердите заявку на услугу",
    "description": "Сообщение, отображаемое пользователю, когда он подтверждает подачу заявки на услугу."
  },
  "message.rotateCredential": {
    "message": "Сбросить ключ",
    "description": "Сообщение, показываемое пользователю, когда он сбрасывает ключ."
  },
  "message.rotateCredentialConfirm": {
    "message": "Вы уверены, что хотите сбросить ключ? После сброса его нельзя будет восстановить.",
    "description": "Сообщение, показываемое пользователю, когда он подтверждает сброс ключа."
  },
  "message.idDoesNotExist": {
    "message": "Заявка не существует",
    "description": "Сообщение, показываемое пользователю, когда заявка не существует."
  },
  "message.rotateCredentialSuccessfully": {
    "message": "Ключ успешно сброшен",
    "description": "Сообщение, показываемое пользователю, когда ключ успешно сброшен."
  },
  "message.rotateCredentialFailed": {
    "message": "Сброс ключа не удался, пожалуйста, свяжитесь с поддержкой",
    "description": "Сообщение, показываемое пользователю, когда сброс ключа не удался."
  },
  "message.updateFailed": {
    "message": "Ошибка изменения",
    "description": "Сообщение, показываемое пользователю, когда изменение не удалось."
  },
  "message.updateSuccessfully": {
    "message": "Изменение успешно",
    "description": "Сообщение, показываемое пользователю, когда изменение прошло успешно."
  },
  "title.buyService": {
    "message": "Купить услугу",
    "description": "Заголовок страницы, когда пользователь хочет купить услугу."
  },
  "title.applicationRemainingCount": {
    "message": "Количество изменений",
    "description": "Заголовок страницы, когда пользователь хочет изменить количество заявок."
  },
  "title.manageApplication": {
    "message": "Управление заявками",
    "description": "Заголовок страницы, когда пользователь хочет управлять заявками."
  }
}